unbind C-b
set -g prefix C-h

run-shell "tmux setenv -g TMUX_VERSION \"$(tmux -V | cut -d' ' -f2)\""

# Set high scrollback history limit
set-option -g history-limit 100000

set -g default-shell $SHELL
# Fixes copy and paste in MacOS. Needs reattach-to-user-namespace
if-shell '[ "$(uname -s)" = Darwin ]' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Messages are displayed for 4 seconds
set -g display-time 4000

set -g default-terminal "screen-256color"
set -g status-position bottom

# Use r to reload tmux configuration
bind r source-file ~/.tmux.conf\; display "Configuration reloaded!"

# Listen to alerts from all windows
set -g bell-action any

# Pane tiling
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"

# Start window numbering at 1 for easier switching
set -g base-index 1
set -g renumber-windows on

# Easily move windows
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "3.0" ]]' "\
  bind -n C-S-Left swap-window -t -1; \
  bind -n C-S-Right swap-window -t +1; \
  " "\
  bind-key -n C-S-Left swap-window -t -1 \\; select-window -t -1; \
  bind-key -n C-S-Right swap-window -t +1 \\; select-window -t +1; \
  "

# Don't activate mouse
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.1" ]]' "\
  set -g mode-mouse off; \
  set -g mouse-resize-pane off; \
  set -g mouse-select-pane off; \
  set -g mouse-select-window off; \
  " "\
  set -g mouse off; \
  "

# Closer to Vim
set-window-option -g mode-keys vi
bind ^j select-pane -D
bind ^k select-pane -U
bind ^h select-pane -L
bind ^l select-pane -R
bind Escape copy-mode
bind ^c copy-mode # Kind of like escaping, eh?
bind ^p paste-buffer
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.4" ]]' "\
  bind -t vi-copy 'v' begin-selection; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind -t vi-copy 'y' copy-selection; \
  " "\
  bind-key -T copy-mode-vi 'v' send-keys -X begin-selection; \
  bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send-keys -X copy-selection; \
  "

# Use Vim to search buffer (using less if Vim is not available)
# https://sunaku.github.io/tmux-searchable-scrollback.html
bind-key -n M-/ capture-pane -S -32767 -J \; new-window ' \
  tmux save-buffer - \; delete-buffer | { \
    vim -R -c "set nofoldenable incsearch hlsearch ignorecase paste" -; \
    test $? -eq 127 && less; \
  }; \
' \; send-keys G # go to bottom

# Status bar
## The modes {
setw -g clock-mode-colour colour135
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "1.9" ]]' "\
  setw -g mode-bg colour238; \
  setw -g mode-fg colour196; \
  setw -g mode-attr bold; \
  " "\
  setw -g mode-style bg=colour238,fg=colour196,bold; \
  "
## }

## The panes {
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  set -g pane-border-bg colour235; \
  set -g pane-border-fg colour238; \
  set -g pane-active-border-bg colour236; \
  set -g pane-active-border-fg colour44; \
  " "\
  set -g pane-border-style bg=colour235,fg=colour238; \
  set -g pane-active-border-style bg=colour236,fg=colour44; \
  "
## }

## The statusbar {
set -g status-position bottom
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  set -g status-bg colour234; \
  set -g status-fg colour137; \
  set -g status-attr dim; \
  " "\
  set -g status-style bg=colour234,fg=colour137,dim; \
  "
set -g status-left '#[fg=colour250][#S] '
set -g status-right '#[fg=colour233,bg=colour239,bold] #H #[fg=colour233,bg=colour241,bold] %d/%m/%y #[fg=colour233,bg=colour245,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  setw -g window-status-current-bg colour238; \
  setw -g window-status-current-fg colour81; \
  setw -g window-status-current-attr bold; \
  " "\
  set -g window-status-current-style bg=colour238,fg=colour81,bold; \
  "
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  setw -g window-status-bg colour235; \
  setw -g window-status-fg colour138; \
  setw -g window-status-attr none; \
  " "\
  set -g window-status-style bg=colour235,fg=colour138,none; \
  "
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  setw -g window-status-bell-bg colour100; \
  setw -g window-status-bell-fg colour255; \
  setw -g window-status-bell-attr bold; \
  " "\
  set -g window-status-bell-style bg=colour100,fg=colour255,bold; \
  "
## }

## The messages {
if-shell -b '[[ "$(tmux show-environment -g TMUX_VERSION | cut -d"=" -f2)" < "2.9" ]]' "\
  set -g message-bg colour166; \
  set -g message-fg colour232; \
  set -g message-attr bold; \
  " "\
  set -g message-style bg=colour166,fg=colour232,bold; \
  "
## }

# Plugins
set -g @plugin 'tmux-plugins/tpm'
# save (prefix + Ctrl-s) and restore (prefix + Ctrl-r) sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Continuously save tmux environment
set -g @plugin 'tmux-plugins/tmux-continuum'
# Save every 15 minutes (already default behaviour)
set -g @continuum-save-interval '15'
# Enables copying to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
